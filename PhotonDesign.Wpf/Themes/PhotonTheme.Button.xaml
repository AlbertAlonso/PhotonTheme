<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:wpf="clr-namespace:PhotonTheme.Wpf"
    xmlns:converters1="clr-namespace:PhotonTheme.Wpf.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PhotonTheme.Wpf;component/Themes/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  BASE  -->
    <Style x:Key="BaseButton" TargetType="{x:Type ButtonBase}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource PhotonThemeFont}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="wpf:ShadowExtension.ShadowDepth" Value="Depth1" />
        <Setter Property="TextBlock.FontWeight" Value="SemiBold" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,4,16,4" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator Height="{TemplateBinding Height}" CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowExtension.CacheMode)}">
                            <Grid>
                                <Border
                                    x:Name="border"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding Path=(wpf:ButtonExtension.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                    Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ShadowExtension.ShadowDepth), Converter={x:Static converters1:ShadowConverter.Instance}}" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <wpf:PackIcon
                                        Height="{TemplateBinding Height}"
                                        Margin="2,0" VerticalAlignment="Center"
                                        Kind="{Binding Path=(wpf:ButtonExtension.LeftIcon), RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Plus}"
                                        Visibility="{Binding Path=(wpf:ButtonExtension.LeftIconVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <TextBlock
                                        Grid.Column="1"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                        <wpf:PackIcon
                                        Grid.Column="2"
                                        Margin="2,0" 
                                        VerticalAlignment="Center"
                                        Kind="{Binding Path=(wpf:ButtonExtension.RightIcon), RelativeSource={RelativeSource TemplatedParent}}"
                                        Visibility="{Binding Path=(wpf:ButtonExtension.RightIconVisibility), RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Border>
                                <wpf:Ripple
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Focusable="False"
                                    Foreground="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </AdornerDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowExtension.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowExtension.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource MediumBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DarkBrush}" />
                            <Setter Property="wpf:ShadowExtension.ShadowDepth" Value="Depth0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Primary  -->
    <Style
        x:Key="PrimaryButton"
        BasedOn="{StaticResource BaseButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="wpf:RippleAssist.Feedback" Value="{StaticResource LightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource LightBrush}" />
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
    </Style>

    <!--  Secondary  -->
    <Style
        x:Key="SecondaryButton"
        BasedOn="{StaticResource BaseButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="wpf:RippleAssist.Feedback" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Background" Value="{StaticResource LightBrush}" />
    </Style>

    <!--  Large Square Primary Button  -->
    <Style
        x:Key="LargeSquarePrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="0" />
    </Style>

    <!--  Medium Square Primary Button  -->
    <Style
        x:Key="MediumSquarePrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="0" />
    </Style>

    <!--  Small Square Primary Button  -->
    <Style
        x:Key="SmallSquarePrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="0" />
    </Style>

    <!--  Large Rounded Primary Button  -->
    <Style
        x:Key="LargeRoundedPrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="4" />
    </Style>

    <!--  Medium Rounded Primary Button  -->
    <Style
        x:Key="MediumRoundedPrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="4" />
    </Style>

    <!--  Small Rounded Primary Button  -->
    <Style
        x:Key="SmallRoundedPrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="4" />
    </Style>

    <!--  Large Circular Primary Button  -->
    <Style
        x:Key="LargeCircularPrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="15" />
    </Style>

    <!--  Medium Circular Primary Button  -->
    <Style
        x:Key="MediumCircularPrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="12" />
    </Style>

    <!--  Small Circular Primary Button  -->
    <Style
        x:Key="SmallCircularPrimaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="10" />
    </Style>

    <!--  Large Square Secondary Button  -->
    <Style
        x:Key="LargeSquareSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="0" />
    </Style>

    <!--  Medium Square Secondary Button  -->
    <Style
        x:Key="MediumSquareSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="0" />
    </Style>

    <!--  Small Square Secondary Button  -->
    <Style
        x:Key="SmallSquareSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="0" />
    </Style>

    <!--  Large Rounded Secondary Button  -->
    <Style
        x:Key="LargeRoundedSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="4" />
    </Style>

    <!--  Medium Rounded Secondary Button  -->
    <Style
        x:Key="MediumRoundedSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="4" />
    </Style>

    <!--  Small Rounded Secondary Button  -->
    <Style
        x:Key="SmallRoundedSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="4" />
    </Style>

    <!--  Large Circular Secondary Button  -->
    <Style
        x:Key="LargeCircularSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="15" />
    </Style>

    <!--  Medium Circular Secondary Button  -->
    <Style
        x:Key="MediumCircularSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="12" />
    </Style>

    <!--  Small Circular Secondary Button  -->
    <Style
        x:Key="SmallCircularSecondaryButton"
        BasedOn="{StaticResource SecondaryButton}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="wpf:ButtonExtension.CornerRadius" Value="10" />
    </Style>
</ResourceDictionary>